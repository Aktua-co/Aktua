# ////ONLY TO GETT STARTED
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }


type Usuario @model
  @auth(
    rules: [
      # Allow anyone to create a user (registration)
      { allow: public, operations: [create,read, update, delete] },
      # Allow owners to read, update, and delete their own user
      { allow: owner, operations: [read, update, delete] }
    ]
  ) {
  id: ID!
  nombre: String!
  correo: String!
  direccion: String!
  rango_visibilidad: Int  
  barrioID: ID @index(name: "byBarrio")
  barrio: Barrio! @belongsTo(fields: ["id"])
  telefono: String!
  foto_perfil: String
  intereses: [String]
  negocio: Negocio @hasOne
  publicaciones: [Publicacion] @hasMany(indexName: "byUsuario", fields: ["id"])
  mensajesEnviados: [Mensaje] @hasMany(indexName: "byEmisor", fields: ["id"])
  mensajesRecibidos: [Mensaje] @hasMany(indexName: "byReceptor", fields: ["id"])
  reviews: [Review] @hasMany(indexName: "byUser", fields: ["id"])
  grupos: [UsuarioGrupo] @hasMany(indexName: "byUsuario", fields: ["id"])
  gruposCreados: [Grupo] @hasMany(fields: ["id"])
  cupones: [Cupon] @hasMany(indexName: "byUsuario", fields: ["id"])
}

type Negocio @model @auth( rules: [
      # Allow anyone to create a user (registration)
      { allow: public, operations: [create,read, update, delete] },
      # Allow owners to read, update, and delete their own user
      { allow: owner, operations: [read, update, delete] }
    ]){
  id: ID!
  usuarioID: ID @index(name: "byUsuario")
  usuario: Usuario @belongsTo(fields: ["id"])
  nombre_negocio: String!
  correo: String!
  logo: String
  banner: String
  direccion: String!
  telefono: String!
  barrioID: ID! @index(name: "byBarrio")  # Define the "byBarrio" index
  barrio: Barrio @belongsTo(fields: ["barrioID"])
  categoriaID: ID @index(name: "byCatergoria")
  categoria: Categoria @belongsTo(fields: ["id"])
  descripcion: String
  horario: String
  puntuacion_promedio: Float
  cupones: [Cupon] @hasMany(indexName: "byNegocio", fields: ["id"])
  reviews: [Review] @hasMany(indexName: "byNegocio", fields: ["id"])
}

type Barrio @model @auth(
    rules: [
        { allow: public, operations: [read,create,update] },
        { allow: owner, operations: [read,create,update] }, 
        { allow: groups, groups: ["Admin"], operations: [read, create, update, delete] }]){
  id: ID!
  nombre: String!
  vecinos: [Usuario] @hasMany(indexName: "byBarrio", fields: ["id"])
  negocios: [Negocio] @hasMany(indexName: "byBarrio", fields: ["id"])
}



type Cupon @model  @auth(rules: [{ allow: owner }]) {
  id: ID!
  negocioID: ID  @index(name: "byNegocio")
  negocio: Negocio @belongsTo(fields: ["id"]) 
  descripcion: String!
  codigo: String!
  fecha_expiracion: AWSDateTime!
  fecha_expedicion: AWSDateTime!
  imagen: String!
  descuento: Float!
  id_usuario: ID! @index(name: "byUsuario")
}

type Categoria @model @auth(rules: [{ allow: owner, operations: [read] }, { allow: groups, groups: ["Admin"], operations: [create, update, delete] }]){
  id: ID!
  nombre: String!
  descripcion: String!
  negocios: [Negocio] @hasMany(indexName: "byCatergoria", fields: ["id"])
}

type Publicacion @model @auth(rules: [{ allow: owner }]){
  id: ID!
  timestamp: AWSDateTime!
  usuarioID: ID!@index(name: "byUsuario")
  usuario: Usuario @belongsTo(fields: ["usuarioID"])
  categoria: String!
  titulo: String!
  contenido: String!
  imagenes: [String]
  videos: [String]
}

type Mensaje @model @auth(rules: [{ allow: owner }]){
  mensaje_id: ID!
  emisorID: ID! @index(name: "byEmisor")
  emisor: Usuario @belongsTo(fields: ["emisorID"])
  receptorID: ID! @index(name: "byReceptor")
  receptor: Usuario @belongsTo(fields: ["receptorID"])
  mensaje: String!
  timestamp: AWSDateTime!
  leido: Boolean!
}

type Grupo @model @auth(rules: [{ allow: owner }]){
  id_grupo: ID!
  nombre: String!
  descripcion: String!
  fecha_creacion: AWSDateTime!
  creado_porID: ID! @index(name: "byCreador")
  creado_por: Usuario @belongsTo(fields: ["creado_porID"])
  miembros: [UsuarioGrupo] @hasMany(indexName: "byGrupo", fields: ["id_grupo"])
  intereses: [GrupoInteres] @hasMany(indexName: "byGrupo", fields: ["id_grupo"])
}

type Review @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  rating: Float!
  comment: String!
  userId: ID! @index(name: "byUser")
  user: Usuario @belongsTo(fields: ["userId"])
  negocioID: ID! @index(name: "byNegocio")
  negocio: Negocio @belongsTo(fields: ["negocioID"])
}

type Interes @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  nombre: String!
  grupos: [GrupoInteres] @hasMany(indexName: "byInteres", fields: ["id"])
}

type UsuarioGrupo @model  @auth(rules: [{ allow: owner }]){
  id: ID!
  usuarioID: ID! @index(name: "byUsuario")
  grupoID: ID! @index(name: "byGrupo")
  usuario: Usuario @belongsTo(fields: ["usuarioID"])
  grupo: Grupo @belongsTo(fields: ["grupoID"])
}

type GrupoInteres @model  @auth(rules: [{ allow: owner }]){
  id: ID!
  grupoID: ID! @index(name: "byGrupo")
  interesID: ID! @index(name: "byInteres")
  grupo: Grupo @belongsTo(fields: ["grupoID"])
  interes: Interes @belongsTo(fields: ["interesID"])
}

type Notification @model @auth(rules: [{ allow: owner }]) 
{
  id: ID!
  type: String!
  content: String!
  id_usuario: ID! @index(name: "byUsuario") 
  isRead: Boolean!
}





